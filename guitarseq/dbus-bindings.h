/* Generated by dbus-binding-tool; do not edit! */

#include <glib.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS

#ifndef _DBUS_GLIB_ASYNC_DATA_FREE
#define _DBUS_GLIB_ASYNC_DATA_FREE
static
#ifdef G_HAVE_INLINE
inline
#endif
void
_dbus_glib_async_data_free (gpointer stuff)
{
	g_slice_free (DBusGAsyncData, stuff);
}
#endif

#ifndef DBUS_GLIB_CLIENT_WRAPPERS_com_hypertriangle_guitarseq
#define DBUS_GLIB_CLIENT_WRAPPERS_com_hypertriangle_guitarseq

static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
com_hypertriangle_guitarseq_test (DBusGProxy *proxy, GError **error)

{
  return dbus_g_proxy_call (proxy, "test", error, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*com_hypertriangle_guitarseq_test_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
com_hypertriangle_guitarseq_test_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(com_hypertriangle_guitarseq_test_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
com_hypertriangle_guitarseq_test_async (DBusGProxy *proxy, com_hypertriangle_guitarseq_test_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "test", com_hypertriangle_guitarseq_test_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
#endif /* defined DBUS_GLIB_CLIENT_WRAPPERS_com_hypertriangle_guitarseq */

G_END_DECLS
